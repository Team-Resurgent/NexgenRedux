#pragma once

#if defined NEXGEN_OG || defined NEXGEN_360

#include <xtl.h>

typedef struct _STRING {
	USHORT Length;
	USHORT MaximumLength;
	PCHAR Buffer;
} STRING;

extern "C" {

	#if defined NEXGEN_OG

	enum SMBUS_DEVICES
	{
		SMBDEV_PIC16L = 0x20,
		SMBDEV_VIDEO_ENCODER = 0x8a,
		SMBDEV_TEMP_MONITOR = 0x98,
		SMBDEV_EEPROM = 0xA8
	};

		enum PIC16L_CMD
	{
		PIC16L_CMD_POWER = 0x02,
		PIC16L_CMD_LED_MODE = 0x07,
		PIC16L_CMD_LED_REGISTER = 0x08,
		PIC16L_CMD_EJECT = 0x0C,
		PIC16L_CMD_INTERRUPT_REASON = 0x11,
		PIC16L_CMD_RESET_ON_EJECT = 0x19,
		PIC16L_CMD_SCRATCH_REGISTER = 0x1B

	};

	enum POWER_SUBCMD
	{
		POWER_SUBCMD_RESET = 0x01,
		POWER_SUBCMD_CYCLE = 0x40,
		POWER_SUBCMD_POWER_OFF = 0x80
	};

	enum LED_MODE_SUBCMD
	{
		LED_MODE_SUBCMD_DEFAULT_MODE = 0x00,
		LED_MODE_SUBCMD_CUSTOM_MODE = 0x01
	};

	enum LED_REGISTER_CYCLE
	{
		LED_REGISTER_CYCLE3_GREEN	= 0x01,
		LED_REGISTER_CYCLE2_GREEN	= 0x02,
		LED_REGISTER_CYCLE1_GREEN	= 0x04, 
		LED_REGISTER_CYCLE0_GREEN	= 0x08,
		LED_REGISTER_CYCLE3_RED		= 0x10,
		LED_REGISTER_CYCLE2_RED		= 0x20,
		LED_REGISTER_CYCLE1_RED		= 0x40, 
		LED_REGISTER_CYCLE0_RED		= 0x80
	};

	enum EJECT_SUBCMD
	{
		EJECT_SUBCMD_EJECT = 0x00,
		EJECT_SUBCMD_LOAD = 0x01
	};	

	enum INTERRUPT_REASON_BITVALUE
	{
		INTERRUPT_REASON_BITVALUE_POWER_BUTTON = 0x01,
		INTERRUPT_REASON_BITVALUE_AV_REMOVED = 0x10,
		INTERRUPT_REASON_BITVALUE_EJECT_BUTTON = 0x20
	};

	enum RESET_ON_EJECT_SUBCMD
	{
		RESET_ON_EJECT_SUBCMD_ENABLE = 0x00,
		RESET_ON_EJECT_SUBCMD_DISABLE = 0x01

	};

	enum SCRATCH_REGISTER_BITVALUE
	{
		SCRATCH_REGISTER_BITVALUE_EJECT_AFTER_BOOT = 0x01,
		SCRATCH_REGISTER_BITVALUE_DISPLAY_ERROR = 0x02,
		SCRATCH_REGISTER_BITVALUE_NO_ANIMATION = 0x04,
		SCRATCH_REGISTER_BITVALUE_RUN_DASHBOARD = 0x08
	};

	extern STRING* XeImageFileName;
	LONG WINAPI IoCreateSymbolicLink(STRING*, STRING*);
	LONG WINAPI IoDeleteSymbolicLink(STRING*);
	extern VOID WINAPI HalReadSMCTrayState(DWORD* state, DWORD* count);
	XBOXAPI LONG WINAPI HalWriteSMBusValue(UCHAR devddress, UCHAR offset, UCHAR writedw, DWORD data);
	XBOXAPI LONG WINAPI HalReadSMBusValue(UCHAR devddress, UCHAR offset, UCHAR readdw, LPBYTE pdata);
	#else 
	int __stdcall ObCreateSymbolicLink(STRING*, STRING*);
	int __stdcall ObDeleteSymbolicLink(STRING*);
	#endif

}

#endif